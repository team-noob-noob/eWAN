// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eWAN.Core.Infrastructure.Database;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("eWAN.Core.Domains.Account.Account", b =>
                {
                    b.Property<string>("accountId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("accountId");

                    b.HasIndex("accountId");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("eWAN.Core.Domains.Security.User", b =>
                {
                    b.Property<Guid>("externalUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("accountId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("externalUserId", "accountId");

                    b.HasIndex("externalUserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("eWAN.Core.Domains.Account.Account", b =>
                {
                    b.OwnsOne("eWAN.Core.Domains.Account.Contact", "contacts", b1 =>
                        {
                            b1.Property<string>("accountId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("emailAddress")
                                .HasColumnType("TEXT");

                            b1.HasKey("accountId");

                            b1.ToTable("accounts");

                            b1.WithOwner()
                                .HasForeignKey("accountId");

                            b1.OwnsOne("eWAN.Core.Domains.Account.Address", "homeAddress", b2 =>
                                {
                                    b2.Property<string>("ContactaccountId")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("barangay")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("city")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("region")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("street")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("subdivision")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("zip")
                                        .HasColumnType("TEXT");

                                    b2.HasKey("ContactaccountId");

                                    b2.ToTable("accounts");

                                    b2.WithOwner()
                                        .HasForeignKey("ContactaccountId");
                                });

                            b1.OwnsOne("eWAN.Core.Domains.Account.PhoneNumber", "mobileNumber", b2 =>
                                {
                                    b2.Property<string>("ContactaccountId")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("areaCode")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("countryCode")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("extension")
                                        .HasColumnType("TEXT");

                                    b2.HasKey("ContactaccountId");

                                    b2.ToTable("accounts");

                                    b2.WithOwner()
                                        .HasForeignKey("ContactaccountId");
                                });
                        });

                    b.OwnsOne("eWAN.Core.Domains.Account.Guardian", "guardian", b1 =>
                        {
                            b1.Property<string>("accountId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("name")
                                .HasColumnType("TEXT");

                            b1.HasKey("accountId");

                            b1.ToTable("accounts");

                            b1.WithOwner()
                                .HasForeignKey("accountId");

                            b1.OwnsOne("eWAN.Core.Domains.Account.PhoneNumber", "mobileNumber", b2 =>
                                {
                                    b2.Property<string>("GuardianaccountId")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("areaCode")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("countryCode")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("extension")
                                        .HasColumnType("TEXT");

                                    b2.HasKey("GuardianaccountId");

                                    b2.ToTable("accounts");

                                    b2.WithOwner()
                                        .HasForeignKey("GuardianaccountId");
                                });
                        });

                    b.OwnsOne("eWAN.Core.Domains.Account.Name", "name", b1 =>
                        {
                            b1.Property<string>("accountId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("firstName")
                                .HasColumnType("TEXT");

                            b1.Property<string>("lastName")
                                .HasColumnType("TEXT");

                            b1.Property<string>("middleName")
                                .HasColumnType("TEXT");

                            b1.HasKey("accountId");

                            b1.ToTable("accounts");

                            b1.WithOwner()
                                .HasForeignKey("accountId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
